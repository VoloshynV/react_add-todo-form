{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","components/AddTodo/AddTodo.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","id","classNames","completed","title","TodoList","todos","map","username","AddTodo","users","onSubmit","useState","setTitle","userId","setUserId","titleError","setTitleError","userIdError","setUserIdError","action","method","e","preventDefault","trimedTitle","trim","type","value","onChange","target","replace","placeholder","defaultValue","toString","disabled","todosWithUser","usersFromServer","find","App","setTodos","newTodo","prev","newId","Math","max","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b8d54e74.chunk.js","sourcesContent":["import { FC } from 'react';\nimport { User } from '../../types/user';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import { FC } from 'react';\nimport classNames from 'classnames';\nimport { TodoWithUser } from '../../types/todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: TodoWithUser\n};\n\nexport const TodoInfo: FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': todo.completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      {todo.user && <UserInfo user={todo.user} />}\n    </article>\n  );\n};\n","import { FC } from 'react';\nimport { TodoWithUser } from '../../types/todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: TodoWithUser[]\n};\n\nexport const TodoList: FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import {\n  ChangeEvent,\n  FC, FormEvent, useState,\n} from 'react';\nimport { User } from '../../types/user';\nimport { Todo } from '../../types/todo';\n\ntype Props = {\n  users: User[]\n  onSubmit: (newTodo: Omit<Todo, 'id'>) => void\n};\n\nexport const AddTodo: FC<Props> = ({ users, onSubmit }) => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState<number | null>(null);\n\n  const [titleError, setTitleError] = useState(false);\n  const [userIdError, setUserIdError] = useState(false);\n\n  const handleTitleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setTitleError(false);\n    setTitle(e.target.value.replace(/[^a-zA-Zа-яА-Я0-9 ]+/g, ''));\n  };\n\n  const handleUserIdChange = (e: ChangeEvent<HTMLSelectElement>) => {\n    setUserIdError(false);\n    setUserId(+e.target.value);\n  };\n\n  const resetForm = () => {\n    setTitle('');\n    setUserId(0);\n  };\n\n  const handleSubmit = (e: FormEvent) => {\n    e.preventDefault();\n\n    const trimedTitle = title.trim();\n\n    setTitleError(!trimedTitle);\n    setUserIdError(!userId);\n\n    if (!trimedTitle || !userId) {\n      return;\n    }\n\n    onSubmit({ title: trimedTitle, userId, completed: false });\n    resetForm();\n  };\n\n  return (\n    <div>\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            Todo title:\n            {' '}\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              value={title}\n              onChange={handleTitleChange}\n              placeholder=\"do something\"\n            />\n          </label>\n          {titleError && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            User:\n            {' '}\n            <select\n              data-cy=\"userSelect\"\n              defaultValue={0}\n              value={userId?.toString()}\n              onChange={handleUserIdChange}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n              {users.map(user => (\n                <option key={user.id} value={user.id}>{user.name}</option>\n              ))}\n            </select>\n          </label>\n\n          {userIdError && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n    </div>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { AddTodo } from './components/AddTodo';\nimport { Todo } from './types/todo';\n\nconst todosWithUser = todosFromServer.map((todo) => ({\n  ...todo,\n  user: usersFromServer.find(user => user.id === todo.userId) || null,\n}));\n\nexport const App = () => {\n  const [todos, setTodos] = useState(todosWithUser);\n\n  const addTodo = (newTodo: Omit<Todo, 'id'>) => {\n    setTodos(prev => {\n      const newId = Math.max(...prev.map((todo) => todo.id)) + 1;\n\n      return [\n        ...prev,\n        {\n          id: newId,\n          ...newTodo,\n          user: usersFromServer\n            .find(user => user.id === newTodo.userId) || null,\n        }];\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <AddTodo users={usersFromServer} onSubmit={addTodo} />\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}